name: linearb-metrics-watch

on:
  schedule:
    - cron: "0 1 * * *"  # 毎日 JST 10:00 に実行
  workflow_dispatch:      # 手動実行も可能

jobs:
  create_issue_if_needed:
    runs-on: ubuntu-latest
    steps:
      - name: Check metrics & create Linear issue
        env:
          LB_TOKEN: ${{ secrets.LB_TOKEN }}
          LINEAR_TOKEN: ${{ secrets.LINEAR_TOKEN }}
          LINEAR_TEAM_ID: ${{ secrets.LINEAR_TEAM_ID }}
        run: |
          pip install requests --quiet
          python <<'PY'
          import os, requests, datetime, textwrap, json

          LB   = os.environ['LB_TOKEN']
          LIN  = os.environ['LINEAR_TOKEN']
          TEAM = os.environ['LINEAR_TEAM_ID']

          # --- ① LinearB v1 API ─ Pickup 平均を取得
          since = (datetime.date.today() - datetime.timedelta(days=7)).isoformat()
          url   = f"https://public-api.linearb.io/v1/metrics/cycle-time?from={since}"
          res   = requests.get(url, headers={"x-api-key": LB}, timeout=30)
          res.raise_for_status()
          pickup = res.json()["average"]["pickup"]  # 単位: minutes

          THRESHOLD = 8 * 60  # しきい値: 8時間（480分）

          if pickup < THRESHOLD:
              print(f"✅ OK ({pickup/60:.1f}h < 8h)")
              quit()

          # --- ② Linear に Issue 作成
          title = f"[Auto] Pickup exceeds 8h ({pickup/60:.1f}h)"
          desc  = textwrap.dedent(f"""
          ### 問題
          Pickup 平均が **{pickup/60:.1f} 時間** と目標 8h を超過しています。

          ### 原因候補
          - Reviewer が偏っている
          - PR サイズが大きすぎる

          ### 対策案
          - CODEOWNERS 設定で reviewer 分散
          - PR ガイドの整備
          - danger/large-pr の自動チェック
          """)

          gql = """
          mutation($in: IssueCreateInput!) {
            issueCreate(input: $in) {
              issue {
                identifier
                url
              }
            }
          }
          """

          variables = {
            "in": {
              "teamId": TEAM,
              "title": title,
              "description": desc
            }
          }

          response = requests.post(
            "https://api.linear.app/graphql",
            headers={"Authorization": LIN},
            json={"query": gql, "variables": variables},
            timeout=30
          )
          data = response.json()
          issue_url = data["data"]["issueCreate"]["issue"]["url"]
          print(f"✅ Linear Issue created: {issue_url}")
          PY
